[
    {
        "id": "c7300c4242c02729",
        "type": "tab",
        "label": "voltage and current",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "27f25c95.8feb34",
        "type": "tab",
        "label": "REPORT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "df521596.125698",
        "type": "subflow",
        "name": "Persistence Helper",
        "info": "",
        "in": [
            {
                "x": 45.5,
                "y": 85,
                "wires": [
                    {
                        "id": "37028a91.0b1ffe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 749.5,
                "y": 53,
                "wires": [
                    {
                        "id": "230dfeb6.8ba792",
                        "port": 0
                    }
                ]
            },
            {
                "x": 755,
                "y": 169,
                "wires": [
                    {
                        "id": "856afee0.348098",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "d1aefae1253e88f6",
        "type": "modbus-client",
        "name": "testserver",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.16.1.100",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "1201447fa5a080a6",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#7043db",
                "baseFont": "Tahoma,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#040839",
                "baseFont": "Tahoma,Geneva,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 52,
                "sy": 52,
                "gx": 1,
                "gy": 1,
                "cx": 1,
                "cy": 1,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "982b1d1ee54bdf96",
        "type": "ui_link",
        "name": "Link 2",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 5
    },
    {
        "id": "0af92681cb796592",
        "type": "MySQLdatabase",
        "name": "modbus_sql",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "modbus",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "d956abfc4a785ca0",
        "type": "ui_link",
        "name": "Link 3",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 4
    },
    {
        "id": "9b4afa576be1c8e5",
        "type": "global-config",
        "name": "global-config",
        "env": []
    },
    {
        "id": "befc1b76.15909",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": false,
        "tcpHost": "192.168.1.139",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": false,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "2613f6aca44972ff",
        "type": "ui_tab",
        "name": "Power Monitoring",
        "icon": "fa-line-chart",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f28c1c9ad82744f1",
        "type": "ui_group",
        "name": "Mitsubishi Smart Meter",
        "tab": "2613f6aca44972ff",
        "order": 2,
        "disp": false,
        "width": 25,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c7986203f7c79191",
        "type": "ui_link",
        "name": "Link 5",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 6
    },
    {
        "id": "0a7af370c5552477",
        "type": "ui_group",
        "name": "Dashboard",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 27,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f744628ab171fb2",
        "type": "corrently-config",
        "name": "",
        "token": ""
    },
    {
        "id": "7234ccb799df10e9",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "d5eab9d3.9be3f8",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "744fc844.d92de",
        "type": "ui_group",
        "name": "Registros",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "27c3d951.18a4e6",
        "type": "ui_group",
        "name": "MiFlora",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "bd903d6.d9fc7c",
        "type": "ui_group",
        "name": "Report",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "18"
    },
    {
        "id": "1e17cd0b.862863",
        "type": "ui_group",
        "name": "Selection",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "5"
    },
    {
        "id": "1c25415d.b8427f",
        "type": "sqlitedb",
        "db": "/home/pi/sqlite/nodered"
    },
    {
        "id": "9979adab0ee0b564",
        "type": "sqlitedb",
        "db": "C:\\Users\\smart\\OneDrive\\デスクトップ\\Project\\Node-Red",
        "mode": "RWC"
    },
    {
        "id": "c72c3629555d8863",
        "type": "ui_group",
        "name": "Filters",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "24"
    },
    {
        "id": "fa00f8e6da82a6b8",
        "type": "ui_group",
        "name": "Report",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "24"
    },
    {
        "id": "c5247e98e9874ca6",
        "type": "ui_group",
        "name": "Filters",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "24"
    },
    {
        "id": "95b80d03fea78b23",
        "type": "ui_group",
        "name": "Report",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "24"
    },
    {
        "id": "9c1332f5510a2f99",
        "type": "ui_group",
        "name": "Solar 30 days",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "4"
    },
    {
        "id": "38c78b88832af7ae",
        "type": "ui_group",
        "name": "Solar 7 days",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "4"
    },
    {
        "id": "81538ff162bc9ecc",
        "type": "ui_group",
        "name": "Solar target",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "4"
    },
    {
        "id": "ffa73a8baf35efff",
        "type": "ui_group",
        "name": "Filters",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "24"
    },
    {
        "id": "ee151ab1f25e0f15",
        "type": "ui_group",
        "name": "Report",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "24"
    },
    {
        "id": "314ebc54e5e57c58",
        "type": "ui_group",
        "name": "Filters",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "24"
    },
    {
        "id": "3663b5e2a7710688",
        "type": "ui_group",
        "name": "Report",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "24"
    },
    {
        "id": "cb8c2a04138c9f20",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "1467e621d7545620",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "5246f6c72b37a11d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "3cb799b8032c7249",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 6,
        "width": 25,
        "height": 1
    },
    {
        "id": "78c7bda37642fc45",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "993a60a674a736ab",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "f6e709582d2bf1c4",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "125d27cb86b56de7",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "8d09b32fa921690d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "968e7b125624dcdb",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "32d2302c22b23b61",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "48014621bfcb07a8",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "2295b7a92379e0fb",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "a29cc43f1787e9ec",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "449a0f63f166c0fa",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "1a3769e64447b305",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "2bbefcf57e2e6b81",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "b117f8bd0bf27356",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "54bf7e2a5f2a5638",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "3540f9627089fc2e",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "1890fd61324b73f3",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "a4eb7f444cdb2f4c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "36109524d123254f",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "8b0598274ad1af31",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "85d75f28b2009a86",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "04528748a1be78a9",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "06e42d6bbe50f90e",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "edb25436c1f45a44",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "487ead2d16260011",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "d7ba364b4787b506",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9d95d48320eaaeb",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "1d3c4352bdacb767",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "fbb3f2f437c337c6",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 37,
        "width": 1,
        "height": 1
    },
    {
        "id": "9db4070d5e04b57b",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "bb188c441ab69ad9",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5c5e7bc473e385d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 47,
        "width": 1,
        "height": 1
    },
    {
        "id": "207e39e2b9b638b2",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 48,
        "width": 25,
        "height": 1
    },
    {
        "id": "a9bbc1b5111f5ce6",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 49,
        "width": 1,
        "height": 1
    },
    {
        "id": "052c46883159b8d5",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 51,
        "width": 1,
        "height": 1
    },
    {
        "id": "2ffb671fe14d94a6",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 53,
        "width": 1,
        "height": 1
    },
    {
        "id": "cf3165ded7cb230c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 55,
        "width": 1,
        "height": 1
    },
    {
        "id": "642ece3e169b6ab4",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 56,
        "width": 1,
        "height": 1
    },
    {
        "id": "380b602f08dae06c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 57,
        "width": 1,
        "height": 1
    },
    {
        "id": "5474228ee911fc85",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 58,
        "width": 1,
        "height": 1
    },
    {
        "id": "68ddfd609af016cd",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 59,
        "width": 1,
        "height": 1
    },
    {
        "id": "f149d77d3aaa5d5c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 60,
        "width": 1,
        "height": 1
    },
    {
        "id": "90787d9d4185251f",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 61,
        "width": 1,
        "height": 1
    },
    {
        "id": "732a18b28682d470",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 62,
        "width": 1,
        "height": 1
    },
    {
        "id": "d18e96a9a77a8841",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 63,
        "width": 1,
        "height": 1
    },
    {
        "id": "b6206423b21511f2",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 64,
        "width": 1,
        "height": 1
    },
    {
        "id": "16f85c5e4b59f0e3",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 65,
        "width": 1,
        "height": 1
    },
    {
        "id": "3922f2d81b61bd35",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 66,
        "width": 1,
        "height": 1
    },
    {
        "id": "a7654fe26884d3f9",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 67,
        "width": 1,
        "height": 1
    },
    {
        "id": "10cc30b41f7e388f",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 68,
        "width": 1,
        "height": 1
    },
    {
        "id": "2f1a21e88574de7a",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 69,
        "width": 1,
        "height": 1
    },
    {
        "id": "d9d71a5d551b3d31",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 70,
        "width": 1,
        "height": 1
    },
    {
        "id": "57ad8cae0c148a2c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 71,
        "width": 1,
        "height": 1
    },
    {
        "id": "6b315ca8012301c5",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 72,
        "width": 25,
        "height": 1
    },
    {
        "id": "f902bb01475d20aa",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 73,
        "width": 1,
        "height": 1
    },
    {
        "id": "c9a93fb2fea4790c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 75,
        "width": 1,
        "height": 1
    },
    {
        "id": "c9e36b1b49ee5010",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 77,
        "width": 1,
        "height": 1
    },
    {
        "id": "0a3d8bb209580e34",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 79,
        "width": 1,
        "height": 1
    },
    {
        "id": "396088877d1e7c5e",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 80,
        "width": 1,
        "height": 1
    },
    {
        "id": "f37c7644d39a533e",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 81,
        "width": 1,
        "height": 1
    },
    {
        "id": "1329c5f77a454aee",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 82,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae4e139f6afaf6d5",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 83,
        "width": 1,
        "height": 1
    },
    {
        "id": "bc77cff8855881ad",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 84,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9549f706282f392",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 85,
        "width": 1,
        "height": 1
    },
    {
        "id": "829b18d285a8226b",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 86,
        "width": 1,
        "height": 1
    },
    {
        "id": "85fe06fd14249117",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 87,
        "width": 1,
        "height": 1
    },
    {
        "id": "3ec1100c97908e96",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 88,
        "width": 1,
        "height": 1
    },
    {
        "id": "bb7e87647a9f5b55",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 89,
        "width": 1,
        "height": 1
    },
    {
        "id": "2f09ba8e371a98a7",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 90,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c52cc7da6c7f56f",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 91,
        "width": 1,
        "height": 1
    },
    {
        "id": "2f1d46aae14c34ed",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 92,
        "width": 1,
        "height": 1
    },
    {
        "id": "1e4993dfc0d7e49b",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 93,
        "width": 1,
        "height": 1
    },
    {
        "id": "3161e749463565e0",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 94,
        "width": 1,
        "height": 1
    },
    {
        "id": "e03dfe47f3c3a888",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 95,
        "width": 1,
        "height": 1
    },
    {
        "id": "5bff5d3e3089ba0a",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 96,
        "width": 25,
        "height": 1
    },
    {
        "id": "fd922f4174275927",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 97,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b857bfed7b665bb",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 99,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae68ed8d58441e4b",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 101,
        "width": 1,
        "height": 1
    },
    {
        "id": "a83476d74958d7d3",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 103,
        "width": 1,
        "height": 1
    },
    {
        "id": "98e2146175bce864",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 104,
        "width": 1,
        "height": 1
    },
    {
        "id": "7aeb76b1abab18cf",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 105,
        "width": 1,
        "height": 1
    },
    {
        "id": "948a9d855ca934da",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 106,
        "width": 1,
        "height": 1
    },
    {
        "id": "7b0a3baab6277fe2",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 107,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f49b267aa1eb84d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 108,
        "width": 1,
        "height": 1
    },
    {
        "id": "f2644cbfc7328742",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 109,
        "width": 1,
        "height": 1
    },
    {
        "id": "830962405fbf8d7c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 110,
        "width": 1,
        "height": 1
    },
    {
        "id": "9da939d806f1edcf",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 111,
        "width": 1,
        "height": 1
    },
    {
        "id": "f06a97a00f3fe9dd",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 112,
        "width": 1,
        "height": 1
    },
    {
        "id": "84e49ee0410d9dbd",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 113,
        "width": 1,
        "height": 1
    },
    {
        "id": "352d77b9de6531bd",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 114,
        "width": 1,
        "height": 1
    },
    {
        "id": "27966756da8af030",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 115,
        "width": 1,
        "height": 1
    },
    {
        "id": "a42ba9c0470b9d8d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 116,
        "width": 1,
        "height": 1
    },
    {
        "id": "6933029ec067ba72",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 117,
        "width": 1,
        "height": 1
    },
    {
        "id": "0971221e0d3423a8",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 118,
        "width": 1,
        "height": 1
    },
    {
        "id": "06c10bf6e5dd7035",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 119,
        "width": 1,
        "height": 1
    },
    {
        "id": "3ef72fc0b7db530d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 120,
        "width": 1,
        "height": 1
    },
    {
        "id": "0a9525a916beb3b6",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 121,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c5de084ecccf775",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 122,
        "width": 1,
        "height": 1
    },
    {
        "id": "00dbe8b958e11a73",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 123,
        "width": 1,
        "height": 1
    },
    {
        "id": "92f576b6ee5752d0",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 124,
        "width": 1,
        "height": 1
    },
    {
        "id": "6aaa2c6deae33e19",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 125,
        "width": 1,
        "height": 1
    },
    {
        "id": "be55f674837edb70",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 126,
        "width": 1,
        "height": 1
    },
    {
        "id": "32fc42eeade25ce9",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 127,
        "width": 1,
        "height": 1
    },
    {
        "id": "d3c295b8908ce698",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 128,
        "width": 1,
        "height": 1
    },
    {
        "id": "c8be3f59f2416711",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 129,
        "width": 1,
        "height": 1
    },
    {
        "id": "57a6f520806d3f94",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 130,
        "width": 1,
        "height": 1
    },
    {
        "id": "ad22e50b353cc2b4",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 131,
        "width": 1,
        "height": 1
    },
    {
        "id": "3daece82b2325df9",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 132,
        "width": 25,
        "height": 1
    },
    {
        "id": "66bf8c3ee2878e20",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 133,
        "width": 1,
        "height": 1
    },
    {
        "id": "8ca8a22236f4952f",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 135,
        "width": 1,
        "height": 1
    },
    {
        "id": "ace6c8521ffd10e1",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 136,
        "width": 1,
        "height": 1
    },
    {
        "id": "64c9747c6adc8763",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 137,
        "width": 1,
        "height": 1
    },
    {
        "id": "9a6bc73dcdcc7e93",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 138,
        "width": 1,
        "height": 1
    },
    {
        "id": "64735abb71942786",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 139,
        "width": 1,
        "height": 1
    },
    {
        "id": "895da12a1b8876a2",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 140,
        "width": 1,
        "height": 1
    },
    {
        "id": "163f6efa033299a4",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 142,
        "width": 1,
        "height": 1
    },
    {
        "id": "64b16b9e0f741325",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 143,
        "width": 1,
        "height": 1
    },
    {
        "id": "161657982defbb83",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 144,
        "width": 1,
        "height": 1
    },
    {
        "id": "6acb3338a5c84e5c",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 145,
        "width": 1,
        "height": 1
    },
    {
        "id": "04aa93f2b0074623",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 146,
        "width": 1,
        "height": 1
    },
    {
        "id": "026c02387baf1d0e",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 147,
        "width": 1,
        "height": 1
    },
    {
        "id": "ef4c30a0ebb375d1",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 148,
        "width": 1,
        "height": 1
    },
    {
        "id": "681a21b7baa6a57a",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 149,
        "width": 1,
        "height": 1
    },
    {
        "id": "60b3e3be43aa326d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 150,
        "width": 1,
        "height": 1
    },
    {
        "id": "2fc4adcd29c6daab",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 151,
        "width": 1,
        "height": 1
    },
    {
        "id": "d439da43afb23ab6",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 152,
        "width": 25,
        "height": 1
    },
    {
        "id": "dd2956c91c5fac83",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 153,
        "width": 1,
        "height": 1
    },
    {
        "id": "2095154c520f34e5",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 155,
        "width": 1,
        "height": 1
    },
    {
        "id": "19b5dc179628d58e",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 156,
        "width": 1,
        "height": 1
    },
    {
        "id": "5df129ee286825ff",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 157,
        "width": 1,
        "height": 1
    },
    {
        "id": "973485fa42180511",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 158,
        "width": 1,
        "height": 1
    },
    {
        "id": "52bfbefcff46f69d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 159,
        "width": 1,
        "height": 1
    },
    {
        "id": "885344091a840e4a",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 160,
        "width": 1,
        "height": 1
    },
    {
        "id": "edbbdc54d6bc3a76",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 161,
        "width": 1,
        "height": 1
    },
    {
        "id": "38281f829aca666d",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 162,
        "width": 1,
        "height": 1
    },
    {
        "id": "3df1447b24039a54",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 163,
        "width": 1,
        "height": 1
    },
    {
        "id": "9e796f45061bf142",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 164,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7f2639112504898",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 165,
        "width": 1,
        "height": 1
    },
    {
        "id": "ac40872512da2a1e",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 166,
        "width": 1,
        "height": 1
    },
    {
        "id": "281692b768c64c23",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 167,
        "width": 1,
        "height": 1
    },
    {
        "id": "6914886b0ef2e693",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 168,
        "width": 1,
        "height": 1
    },
    {
        "id": "4369c0bb1d6236ef",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 169,
        "width": 1,
        "height": 1
    },
    {
        "id": "7b4817f57ad0f955",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 170,
        "width": 1,
        "height": 1
    },
    {
        "id": "94d17205fa39ce2f",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 171,
        "width": 1,
        "height": 1
    },
    {
        "id": "c625114e7b6376ac",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 172,
        "width": 25,
        "height": 1
    },
    {
        "id": "e1a7fccd3d7be724",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 173,
        "width": 1,
        "height": 1
    },
    {
        "id": "20e8985d38a9e6b7",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 175,
        "width": 1,
        "height": 1
    },
    {
        "id": "049ec697a6a3824f",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 176,
        "width": 1,
        "height": 1
    },
    {
        "id": "b4770966cefd7b19",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 177,
        "width": 1,
        "height": 1
    },
    {
        "id": "59d3822db7a8a859",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 178,
        "width": 1,
        "height": 1
    },
    {
        "id": "8a3408bc89e17340",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 179,
        "width": 1,
        "height": 1
    },
    {
        "id": "55a40c30d692115a",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 180,
        "width": 1,
        "height": 1
    },
    {
        "id": "f4c28ab208113f70",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 181,
        "width": 1,
        "height": 1
    },
    {
        "id": "e6031260f30f4f06",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 182,
        "width": 1,
        "height": 1
    },
    {
        "id": "37df8566712596e9",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 183,
        "width": 1,
        "height": 1
    },
    {
        "id": "0bfca7c50fa906ec",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 184,
        "width": 1,
        "height": 1
    },
    {
        "id": "86e70ea68f380ed8",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 185,
        "width": 1,
        "height": 1
    },
    {
        "id": "a2b7a9fe47ebabb7",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 186,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5ead91d20f66380",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 187,
        "width": 1,
        "height": 1
    },
    {
        "id": "7c98efd512a2fade",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 188,
        "width": 1,
        "height": 1
    },
    {
        "id": "a9d077c88dd3edc0",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 189,
        "width": 1,
        "height": 1
    },
    {
        "id": "f7c204ffd1a9f7ea",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 190,
        "width": 1,
        "height": 1
    },
    {
        "id": "a055221b548c52cc",
        "type": "ui_spacer",
        "z": "27f25c95.8feb34",
        "name": "spacer",
        "group": "f28c1c9ad82744f1",
        "order": 191,
        "width": 1,
        "height": 1
    },
    {
        "id": "230dfeb6.8ba792",
        "type": "change",
        "z": "df521596.125698",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "restore",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 589.5,
        "y": 53,
        "wires": [
            []
        ]
    },
    {
        "id": "37028a91.0b1ffe",
        "type": "json",
        "z": "df521596.125698",
        "name": "",
        "x": 175.5,
        "y": 85,
        "wires": [
            [
                "230dfeb6.8ba792"
            ]
        ]
    },
    {
        "id": "b78fb72d.ec3d78",
        "type": "catch",
        "z": "df521596.125698",
        "name": "",
        "scope": [
            "37028a91.0b1ffe"
        ],
        "x": 183.5,
        "y": 117,
        "wires": [
            [
                "c7f43b1c.b7b5d8"
            ]
        ]
    },
    {
        "id": "c7f43b1c.b7b5d8",
        "type": "change",
        "z": "df521596.125698",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 354.5,
        "y": 116,
        "wires": [
            [
                "230dfeb6.8ba792"
            ]
        ]
    },
    {
        "id": "856afee0.348098",
        "type": "inject",
        "z": "df521596.125698",
        "name": "Trigger restore",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 618.5,
        "y": 169,
        "wires": [
            []
        ]
    },
    {
        "id": "c749c659db5d770c",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "VA",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "778",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 380,
        "wires": [
            [
                "f8d9f3d3d0771244"
            ],
            []
        ]
    },
    {
        "id": "e04557ed7ee0517f",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "SCALE",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "755",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 460,
        "wires": [
            [],
            [
                "bc789f1cf52fe8b7"
            ]
        ]
    },
    {
        "id": "ad62daecf34f8761",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 380,
        "wires": [
            [
                "628990c775242fcc"
            ]
        ]
    },
    {
        "id": "f8d9f3d3d0771244",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "phaseA_Voltage",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "ad62daecf34f8761"
            ]
        ]
    },
    {
        "id": "d5fd185867779783",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 460,
        "wires": [
            [
                "4430ca15c1ddcf10"
            ]
        ]
    },
    {
        "id": "628990c775242fcc",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "voltage_AB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "47a18b106334b092"
            ]
        ]
    },
    {
        "id": "4430ca15c1ddcf10",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "scale_AB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 460,
        "wires": [
            [
                "47a18b106334b092"
            ]
        ]
    },
    {
        "id": "47a18b106334b092",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 420,
        "wires": [
            [
                "463d9977cc44a8e9"
            ]
        ]
    },
    {
        "id": "ecb7c6d4041aad39",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 700,
        "wires": [
            [
                "17e21bf43ff3e520"
            ]
        ]
    },
    {
        "id": "c43eb47c73edba3e",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "VC",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "780",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 660,
        "wires": [
            [
                "1fa9dec8ccc20550"
            ],
            []
        ]
    },
    {
        "id": "db72e0f271c4abb6",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "SCALE",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "755",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 740,
        "wires": [
            [],
            [
                "67dfbf3f4b739763"
            ]
        ]
    },
    {
        "id": "cb89033a9893fa80",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "4229047666d61469"
            ]
        ]
    },
    {
        "id": "1fa9dec8ccc20550",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "phaseC_Voltage",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 680,
        "wires": [
            [
                "cb89033a9893fa80"
            ]
        ]
    },
    {
        "id": "9101ed9f0809ae3b",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 740,
        "wires": [
            [
                "fb8c0e89b5e32edb"
            ]
        ]
    },
    {
        "id": "4229047666d61469",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "voltage_CA",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 660,
        "wires": [
            [
                "ecb7c6d4041aad39"
            ]
        ]
    },
    {
        "id": "fb8c0e89b5e32edb",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "scale_CA",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 740,
        "wires": [
            [
                "ecb7c6d4041aad39"
            ]
        ]
    },
    {
        "id": "61fbd5eb1d9c3ccb",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 560,
        "wires": [
            [
                "108a3ad481ada949"
            ]
        ]
    },
    {
        "id": "afba50bc8c418179",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "VB",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "779",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 520,
        "wires": [
            [
                "3eaa98aab9628c26"
            ],
            []
        ]
    },
    {
        "id": "8438a1aa8cb9ab03",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "SCALE",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "755",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 600,
        "wires": [
            [],
            [
                "b37f474792988a64"
            ]
        ]
    },
    {
        "id": "f80d9f4414c1ce99",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "3348983ed5386094"
            ]
        ]
    },
    {
        "id": "3eaa98aab9628c26",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "phaseB_Voltage",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 540,
        "wires": [
            [
                "f80d9f4414c1ce99"
            ]
        ]
    },
    {
        "id": "34fcfd174443e360",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 600,
        "wires": [
            [
                "5892b3db2f5b51d6"
            ]
        ]
    },
    {
        "id": "b37f474792988a64",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Voltage_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 580,
        "wires": [
            [
                "34fcfd174443e360"
            ]
        ]
    },
    {
        "id": "3348983ed5386094",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "voltage_BC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "61fbd5eb1d9c3ccb"
            ]
        ]
    },
    {
        "id": "5892b3db2f5b51d6",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "scale_BC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 600,
        "wires": [
            [
                "61fbd5eb1d9c3ccb"
            ]
        ]
    },
    {
        "id": "108a3ad481ada949",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Voltage_BC",
        "func": "var a = msg.payload.voltage_BC\nvar b = msg.payload.scale_BC\n\nvar list = [a,b]\nvar Phase_B =(a * (10 ** b)).toFixed(2);\nflow.set('Phase_B', Phase_B);\nmsg.payload = { VoltageBC: Phase_B };\nreturn msg; ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 560,
        "wires": [
            [
                "aca1458813309506",
                "0127d506da88b148",
                "185c7d1ecc07da73"
            ]
        ]
    },
    {
        "id": "17e21bf43ff3e520",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Voltage_CA",
        "func": "a = msg.payload.voltage_CA\nb = msg.payload.scale_CA\n\nvar list = [a,b]\nvar Phase_C = (a * (10 ** b)).toFixed(2);\nvar msg1 = { payload: Phase_C }\nflow.set('Phase_C', Phase_C);\nmsg.payload = { VoltageCA: Phase_C };\nreturn msg; \n   ",
        "outputs": 1,
        "timeout": "",
        "noerr": 6,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 700,
        "wires": [
            [
                "73be166d8fee574b",
                "9c0d28450813f45b",
                "fc111b72fb8b2ac5"
            ]
        ]
    },
    {
        "id": "463d9977cc44a8e9",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Voltage_AB",
        "func": "var a = msg.payload.voltage_AB\nvar b = msg.payload.scale_AB\n\nvar list = [a,b]\nvar Phase_A =(a * (10 ** b)).toFixed(2);\nflow.set('Phase_A', Phase_A);\nmsg.payload = { VoltageAB: Phase_A };\nreturn msg; ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 420,
        "wires": [
            [
                "2160fe3a4d51c8ef",
                "82cd48af2bd017bd",
                "af52eca2d987c91b"
            ]
        ]
    },
    {
        "id": "bc789f1cf52fe8b7",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Voltage_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 440,
        "wires": [
            [
                "d5fd185867779783"
            ]
        ]
    },
    {
        "id": "67dfbf3f4b739763",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Voltage_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 720,
        "wires": [
            [
                "9101ed9f0809ae3b"
            ]
        ]
    },
    {
        "id": "3821ecfdaef2175e",
        "type": "ui_chart",
        "z": "c7300c4242c02729",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 154,
        "width": 23,
        "height": 9,
        "label": "Power",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "25",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#260303",
            "#f90b13",
            "#3238ec",
            "#2ca02c",
            "#232c21",
            "#d62728",
            "#ff9896",
            "#1d0c2d",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "box",
        "x": 1370,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "94dbb05551d63c08",
        "type": "mysql",
        "z": "c7300c4242c02729",
        "mydb": "0af92681cb796592",
        "name": "sql",
        "x": 1450,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9ad85a72573fa604",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "A1",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "768",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 800,
        "wires": [
            [
                "69e56279ca415b5f"
            ],
            []
        ]
    },
    {
        "id": "535f52bff3a3521e",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "Current Scale",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "754",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 880,
        "wires": [
            [],
            [
                "435425236da611fd"
            ]
        ]
    },
    {
        "id": "44919d87972cb20c",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "18623c161814c705"
            ]
        ]
    },
    {
        "id": "69e56279ca415b5f",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "phaseA_Current",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 820,
        "wires": [
            [
                "44919d87972cb20c"
            ]
        ]
    },
    {
        "id": "d801392d11881e98",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 880,
        "wires": [
            [
                "fd6978fa33efb7b8"
            ]
        ]
    },
    {
        "id": "18623c161814c705",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Current_A",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 800,
        "wires": [
            [
                "dd39d7a8a9a59908"
            ]
        ]
    },
    {
        "id": "fd6978fa33efb7b8",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "scale_AB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 880,
        "wires": [
            [
                "dd39d7a8a9a59908"
            ]
        ]
    },
    {
        "id": "dd39d7a8a9a59908",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 840,
        "wires": [
            [
                "293f07e5efd15f67"
            ]
        ]
    },
    {
        "id": "1eb7003ba412463a",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "dea28c4ba70ea65c"
            ]
        ]
    },
    {
        "id": "8f33ff411ef805da",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "e0470f4be30996a5"
            ]
        ]
    },
    {
        "id": "febb50d910369b1d",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "phaseC_Current",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1100,
        "wires": [
            [
                "8f33ff411ef805da"
            ]
        ]
    },
    {
        "id": "4d24c8e27dc4b79f",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "efe858519c801f56"
            ]
        ]
    },
    {
        "id": "e0470f4be30996a5",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Current_C",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1080,
        "wires": [
            [
                "1eb7003ba412463a"
            ]
        ]
    },
    {
        "id": "efe858519c801f56",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "scale_CA",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1160,
        "wires": [
            [
                "1eb7003ba412463a"
            ]
        ]
    },
    {
        "id": "10e6875f47717761",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 980,
        "wires": [
            [
                "72ff5ac5a754ee6b"
            ]
        ]
    },
    {
        "id": "1625dee4526fc395",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 940,
        "wires": [
            [
                "7510cbc54bb324eb"
            ]
        ]
    },
    {
        "id": "fb2e87b08122fac5",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "phaseB_Current",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 960,
        "wires": [
            [
                "1625dee4526fc395"
            ]
        ]
    },
    {
        "id": "d120cd06d0602bde",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "abf2d23af9dc5e67"
            ]
        ]
    },
    {
        "id": "7510cbc54bb324eb",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Current_B",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 940,
        "wires": [
            [
                "10e6875f47717761"
            ]
        ]
    },
    {
        "id": "abf2d23af9dc5e67",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "scale_BC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1020,
        "wires": [
            [
                "10e6875f47717761"
            ]
        ]
    },
    {
        "id": "72ff5ac5a754ee6b",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Current_B",
        "func": "a = msg.payload.Current_B\nb = msg.payload.scale_BC\n\nvar list = [a,b]\nvar Phase_B =(a * (10 ** b)).toFixed(2);\nvar msg1 = {payload:Phase_B};\nflow.set('Current_B', Phase_B);\nmsg.payload = { CurrentB: Phase_B };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 6,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 980,
        "wires": [
            [
                "de6cbcb5c1486555",
                "9a96d579c6843af0",
                "58e9ca169240f85a"
            ]
        ]
    },
    {
        "id": "dea28c4ba70ea65c",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Current_C",
        "func": "a = msg.payload.Current_C\nb = msg.payload.scale_CA\n\nvar list = [a,b]\nvar Phase_C =(a * (10 ** b)).toFixed(2);\nvar msg1 = { payload: Phase_C };\nflow.set('Current_C', Phase_C);\nmsg.payload = { CurrentC: Phase_C };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 6,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1120,
        "wires": [
            [
                "d16ed321b5c268c1",
                "3fddbad3fe57ae77",
                "f70b8867e7f9f2b0"
            ]
        ]
    },
    {
        "id": "293f07e5efd15f67",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Current_A",
        "func": "a = msg.payload.Current_A\nb = msg.payload.scale_AB\n\nvar list = [a,b]\nvar Phase_A = (a * (10 ** b)).toFixed(2);\nvar msg2 = { payload: Phase_A }\nflow.set('Current_A',Phase_A);\nmsg.payload = { CurrentA: Phase_A };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 6,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 840,
        "wires": [
            [
                "40b4d27658e7fcf4",
                "80ee2d151d2b7347",
                "c3b3d30f922b583b"
            ]
        ]
    },
    {
        "id": "435425236da611fd",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Current_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 860,
        "wires": [
            [
                "d801392d11881e98"
            ]
        ]
    },
    {
        "id": "8c271adb80185717",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "A2",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "769",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 940,
        "wires": [
            [
                "fb2e87b08122fac5"
            ],
            []
        ]
    },
    {
        "id": "f45e3efa19305284",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "Current Scale",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "754",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 1020,
        "wires": [
            [],
            [
                "1a75e719128fcf1b"
            ]
        ]
    },
    {
        "id": "0b6b6a2dd75c8953",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "A3",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "770",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "febb50d910369b1d"
            ],
            []
        ]
    },
    {
        "id": "81188f74a349880b",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "Current Scale",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "754",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 1160,
        "wires": [
            [],
            [
                "df59cc3edbe85265"
            ]
        ]
    },
    {
        "id": "1a75e719128fcf1b",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Current_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1000,
        "wires": [
            [
                "d120cd06d0602bde"
            ]
        ]
    },
    {
        "id": "df59cc3edbe85265",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Current_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1140,
        "wires": [
            [
                "4d24c8e27dc4b79f"
            ]
        ]
    },
    {
        "id": "dbb7da2af9081af0",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "\nvar msg7 = {};\nmsg7.payload = flow.get('Power');\nmsg7.topic = 'Power';\nreturn [msg7];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 880,
        "wires": [
            [
                "3821ecfdaef2175e"
            ]
        ]
    },
    {
        "id": "48eeed146d96ded0",
        "type": "ui_gauge",
        "z": "c7300c4242c02729",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 98,
        "width": 7,
        "height": 8,
        "gtype": "compass",
        "title": "Power",
        "label": "kW",
        "format": "{{msg.payload.Power}}",
        "min": 0,
        "max": "12000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "box1",
        "x": 1230,
        "y": 1000,
        "wires": []
    },
    {
        "id": "2160fe3a4d51c8ef",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 50,
        "width": 7,
        "height": 5,
        "name": "",
        "label": "Voltage AB",
        "format": "{{msg.payload.VoltageAB + ' V '}}",
        "layout": "col-center",
        "className": "box",
        "style": false,
        "font": "Tahoma,Geneva,sans-serif",
        "fontSize": "55",
        "color": "#ffffff",
        "x": 1250,
        "y": 520,
        "wires": []
    },
    {
        "id": "aca1458813309506",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 52,
        "width": 7,
        "height": 5,
        "name": "",
        "label": "Voltage BC",
        "format": "{{msg.payload.VoltageBC+ ' V '}}",
        "layout": "col-center",
        "className": "box",
        "style": false,
        "font": "Tahoma,Geneva,sans-serif",
        "fontSize": "55",
        "color": "#ffffff",
        "x": 1250,
        "y": 560,
        "wires": []
    },
    {
        "id": "73be166d8fee574b",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 54,
        "width": 7,
        "height": 5,
        "name": "",
        "label": "Voltage CA",
        "format": "{{msg.payload.VoltageCA+ ' V '}}",
        "layout": "col-center",
        "className": "box",
        "style": false,
        "font": "Tahoma,Geneva,sans-serif",
        "fontSize": "55",
        "color": "#ffffff",
        "x": 1250,
        "y": 600,
        "wires": []
    },
    {
        "id": "40b4d27658e7fcf4",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 74,
        "width": 7,
        "height": 5,
        "name": "",
        "label": "Current A",
        "format": "{{msg.payload.CurrentA+ ' A '}}",
        "layout": "col-center",
        "className": "box",
        "style": false,
        "font": "Tahoma,Geneva,sans-serif",
        "fontSize": "55",
        "color": "#ffffff",
        "x": 1240,
        "y": 640,
        "wires": []
    },
    {
        "id": "de6cbcb5c1486555",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 76,
        "width": 7,
        "height": 5,
        "name": "",
        "label": "Current B",
        "format": "{{msg.payload.CurrentB+ ' A '}}",
        "layout": "col-center",
        "className": "box",
        "style": false,
        "font": "Tahoma,Geneva,sans-serif",
        "fontSize": "55",
        "color": "#ffffff",
        "x": 1240,
        "y": 680,
        "wires": []
    },
    {
        "id": "d16ed321b5c268c1",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 78,
        "width": 7,
        "height": 5,
        "name": "",
        "label": "Current C",
        "format": "{{msg.payload.CurrentC+ ' A '}}",
        "layout": "col-center",
        "className": "box",
        "style": false,
        "font": "Tahoma,Geneva,sans-serif",
        "fontSize": "55",
        "color": "#ffffff",
        "x": 1240,
        "y": 720,
        "wires": []
    },
    {
        "id": "b2516b83ddf9825e",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Voltage value",
        "info": "",
        "x": 310,
        "y": 360,
        "wires": []
    },
    {
        "id": "fc31a7f9bd6a514d",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Current value",
        "info": "",
        "x": 290,
        "y": 780,
        "wires": []
    },
    {
        "id": "e064b8a5def3bb8f",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Power",
        "info": "",
        "x": 290,
        "y": 1200,
        "wires": []
    },
    {
        "id": "75a0e69b64bf7806",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "Power",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "794",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 1220,
        "wires": [
            [
                "70a3479a9e7b983b"
            ],
            []
        ]
    },
    {
        "id": "1966e0c6bcee48b2",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "SCALE",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "756",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 1300,
        "wires": [
            [],
            [
                "c4a02d1e49c3e7b2"
            ]
        ]
    },
    {
        "id": "85ac7556e33d37aa",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1220,
        "wires": [
            [
                "b8917bdc6357ab5b"
            ]
        ]
    },
    {
        "id": "70a3479a9e7b983b",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "phaseA_Voltage",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1240,
        "wires": [
            [
                "85ac7556e33d37aa"
            ]
        ]
    },
    {
        "id": "218a6ecfdc6d268c",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1300,
        "wires": [
            [
                "24e307e493293b7f"
            ]
        ]
    },
    {
        "id": "b8917bdc6357ab5b",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Power topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Power",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1220,
        "wires": [
            [
                "73649d5567764c3a"
            ]
        ]
    },
    {
        "id": "24e307e493293b7f",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Scale topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scale",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1300,
        "wires": [
            [
                "73649d5567764c3a"
            ]
        ]
    },
    {
        "id": "73649d5567764c3a",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 1260,
        "wires": [
            [
                "9a7c6cc9bd07afb5"
            ]
        ]
    },
    {
        "id": "9a7c6cc9bd07afb5",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "power data",
        "func": "var a = msg.payload.Power;\nvar b = msg.payload.Scale;\nvar list = [a, b];\nvar Power = (a * (10 ** b)).toFixed(3);\nvar msg1 = { payload: Power };\nflow.set('Power', Power);\nmsg.payload = { Power: Power };\nreturn msg; ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1260,
        "wires": [
            [
                "48eeed146d96ded0",
                "dbb7da2af9081af0",
                "bde81820fc10e56c"
            ]
        ]
    },
    {
        "id": "c4a02d1e49c3e7b2",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Voltage_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1280,
        "wires": [
            [
                "218a6ecfdc6d268c"
            ]
        ]
    },
    {
        "id": "5e418ea034c32c52",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "Energy In",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "1304",
        "quantity": "2",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 100,
        "y": 1360,
        "wires": [
            [
                "f24934ce53bab222"
            ],
            []
        ]
    },
    {
        "id": "5d1d81770c761452",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "SCALE",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "757",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 1420,
        "wires": [
            [],
            [
                "26c461d4a44e6b58"
            ]
        ]
    },
    {
        "id": "e7f340edaf4b6c8f",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1340,
        "wires": [
            [
                "82195846172f6781"
            ]
        ]
    },
    {
        "id": "f24934ce53bab222",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Enerygy IN",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1360,
        "wires": [
            [
                "e7f340edaf4b6c8f"
            ]
        ]
    },
    {
        "id": "3bfa1b486c70dc33",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1420,
        "wires": [
            [
                "d3d01f31c8806ea1"
            ]
        ]
    },
    {
        "id": "82195846172f6781",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Power topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EIN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1340,
        "wires": [
            [
                "274af7b5dfddc904"
            ]
        ]
    },
    {
        "id": "d3d01f31c8806ea1",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Scale topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scale",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "274af7b5dfddc904"
            ]
        ]
    },
    {
        "id": "274af7b5dfddc904",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 1380,
        "wires": [
            [
                "3528b7a3d3100c26"
            ]
        ]
    },
    {
        "id": "3528b7a3d3100c26",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Energy In Data",
        "func": "var a = msg.payload.EIN;\nvar b = msg.payload.Scale;\nvar list = [a, b];\nvar EnergyIn = (a * (10 ** b)).toFixed(2);\nvar msg1 = { payload: EnergyIn };\nflow.set('EnergyIn', EnergyIn);\nmsg.payload = { EnergyIn: EnergyIn };\nreturn msg; ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1380,
        "wires": [
            [
                "2d65a1b91a4ce7d8",
                "eb4c26c073a3f6b9",
                "283f48baf0a238df"
            ]
        ]
    },
    {
        "id": "26c461d4a44e6b58",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Energy_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1400,
        "wires": [
            [
                "3bfa1b486c70dc33"
            ]
        ]
    },
    {
        "id": "14e571e78ab65119",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "Energy Out",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "1306",
        "quantity": "2",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 90,
        "y": 1480,
        "wires": [
            [
                "987d962e7ff5328c"
            ],
            []
        ]
    },
    {
        "id": "13a534b38c5876be",
        "type": "modbus-read",
        "z": "c7300c4242c02729",
        "name": "SCALE",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "757",
        "quantity": "1",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "befc1b76.15909",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 1540,
        "wires": [
            [],
            [
                "378b1c15a986cf0c"
            ]
        ]
    },
    {
        "id": "45d6f887b6874cd8",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    // function twos_complement(value, length) {\n    //     var bits = length * 16;\n    //     if (value & (1 << (bits - 1))) {\n    //         return value - (1 << bits);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n\n    // // Apply twos_complement to the result\n    // result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1460,
        "wires": [
            [
                "5dbcfcf94ef0fe2d"
            ]
        ]
    },
    {
        "id": "987d962e7ff5328c",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Energy Out",
        "func": "// @ts-nocheck\nvar input = msg.payload;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1480,
        "wires": [
            [
                "45d6f887b6874cd8"
            ]
        ]
    },
    {
        "id": "f2df19b5b62e3d82",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "list_to_int",
        "func": "\n/**\n* @param {string | any[]} list_data\n*/\nfunction processArray(list_data) {\n    var length = list_data.length;\n    console.log(length);\n    var result;\n    if (length === 1) {\n        result = list_data[0];\n    } else if (length === 2) {\n        result = (list_data[0] << 16) | list_data[1];\n    }\n    else {\n        return null;\n    }\n\n    // Define the twos_complement function\n    /**\n* @param {number} value\n* @param {number} length\n*/\n    function twos_complement(value, length) {\n        var bits = length * 16;\n        if (value & (1 << (bits - 1))) {\n            return value - (1 << bits);\n        } else {\n            return value;\n        }\n    }\n\n    // Apply twos_complement to the result\n    result = twos_complement(result, length);\n\n    return result;\n}\n\nmsg.payload = processArray(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1540,
        "wires": [
            [
                "fd3e4bcc11203250"
            ]
        ]
    },
    {
        "id": "5dbcfcf94ef0fe2d",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Power topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EOUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1460,
        "wires": [
            [
                "e08ff27788e97749"
            ]
        ]
    },
    {
        "id": "fd3e4bcc11203250",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Scale topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scale",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "e08ff27788e97749"
            ]
        ]
    },
    {
        "id": "e08ff27788e97749",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 1500,
        "wires": [
            [
                "906356119a59a597"
            ]
        ]
    },
    {
        "id": "906356119a59a597",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Enery Out Data",
        "func": "var a = msg.payload.EOUT;\nvar b = msg.payload.Scale;\nvar list = [a, b];\nvar EnergyOut = (a * (10 ** b)).toFixed(2);\nvar msg1 = { payload: EnergyOut };\nflow.set('EnergyOut', EnergyOut);\nmsg.payload = { EnergyOut: EnergyOut };\nreturn msg; ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1500,
        "wires": [
            [
                "1f3c2bc6d9d26eaf",
                "53e829d235abc00b",
                "6b47b3dc4ef013b7"
            ]
        ]
    },
    {
        "id": "378b1c15a986cf0c",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Energy_Scale",
        "func": "// @ts-nocheck\nvar input = msg.payload.data;\nmsg.payload = input;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1520,
        "wires": [
            [
                "f2df19b5b62e3d82"
            ]
        ]
    },
    {
        "id": "e62add46dd6cadee",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Energy In",
        "info": "",
        "x": 260,
        "y": 1320,
        "wires": []
    },
    {
        "id": "89dfa6a6bc4f734f",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Energy Out",
        "info": "",
        "x": 270,
        "y": 1440,
        "wires": []
    },
    {
        "id": "2d65a1b91a4ce7d8",
        "type": "ui_gauge",
        "z": "c7300c4242c02729",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 100,
        "width": 7,
        "height": 8,
        "gtype": "compass",
        "title": "Feed In",
        "label": "Wh",
        "format": "{{msg.payload.EnergyIn}}",
        "min": 0,
        "max": "12000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "box1",
        "x": 1240,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1f3c2bc6d9d26eaf",
        "type": "ui_gauge",
        "z": "c7300c4242c02729",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 102,
        "width": 7,
        "height": 8,
        "gtype": "compass",
        "title": "Feed Out",
        "label": "Wh",
        "format": "{{msg.payload.EnergyOut}}",
        "min": 0,
        "max": "12000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "box1",
        "x": 1240,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e06fa5d5cd58e9f7",
        "type": "inject",
        "z": "c7300c4242c02729",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1430,
        "y": 540,
        "wires": [
            [
                "097df4ef24325fe5"
            ]
        ]
    },
    {
        "id": "097df4ef24325fe5",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "",
        "func": "var timestamp = msg.payload;\nlet time = new Date(timestamp).toLocaleTimeString();\n\nreturn {\n payload: time\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 580,
        "wires": [
            [
                "310a0cb410fe2909"
            ]
        ]
    },
    {
        "id": "310a0cb410fe2909",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Digital time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "box",
        "style": true,
        "font": "Tahoma,Geneva,sans-serif",
        "fontSize": "20",
        "color": "#e60000",
        "x": 1430,
        "y": 620,
        "wires": []
    },
    {
        "id": "2af391d5ef449602",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "// var msg1 = {};\n// var msg2 = {};\n// var msg3 = {};\n// var msg4 = {};\n// var msg5 = {};\n// var msg6 = {};\n// var msg7 = {};\n// msg1.payload = flow.get('Phase_A');\n// msg1.topic = 'VoltageA';\n// msg2.payload = flow.get('Current_A');\n// msg2.topic = 'CurrentA';\n// msg3.payload = flow.get('Phase_B');\n// msg3.topic = 'VoltageB';\n// msg4.payload = flow.get('Current_B');\n// msg4.topic = 'CurrentB';\n// msg5.payload = flow.get('Phase_C');\n// msg5.topic = 'VoltageC';\n// msg6.payload = flow.get('Current_C');\n// msg6.topic = 'CurrentC';\n// msg7.payload = flow.get('Power');\n// msg7.topic = 'Power';\n// return [msg1,msg2,msg3,msg4,msg5,msg6,msg7]\n\n\n\nvar response = {\n    VoltageA: flow.get('Phase_A'),\n    CurrentA: flow.get('Current_A'),\n    VoltageB: flow.get('Phase_B'),\n    CurrentB: flow.get('Current_B'),\n    VoltageC: flow.get('Phase_C'),\n    CurrentC: flow.get('Current_C'),\n    Power: flow.get('Power')\n};\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1080,
        "wires": [
            [
                "a10872aef796a2ba"
            ]
        ]
    },
    {
        "id": "4d6dcb93b04bb13b",
        "type": "ui_template",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "name": "CSS",
        "order": 141,
        "width": 1,
        "height": 1,
        "format": "<style>\n    .box {\n        width: 200px;\n        height: 200px;\n        background-color: #808000;\n        border: 2px solid #FF00FF;\n        border-radius: 16px;\n        padding: 20px;\n        margin: 15px;\n        box-shadow: 3px 3px 9px olive;\n        font: normal normal bold 45px/1.5 Tahoma;\n    }\n\n    .box1 {\n        width: 430px;\n        height: 430px;\n        background-color: lightblue;\n        border: 2px solid #FF00FF;\n        border-radius: 16px;\n        padding: 20px;\n        margin: 15px;\n        box-shadow: 3px 3px 9px olive;\n        font: normal normal bold 45px/1.5 Tahoma;\n        font-weight: bold;\n\n    }\n    .title {\n        width: 430px;\n        height: 430px;\n        background-color: lightblue;\n        border: 2px solid #FF00FF;\n        border-radius: 16px;\n        padding: 20px;\n        margin: 15px;\n        box-shadow: 3px 3px 9px olive;\n        font: normal normal bold 20px/1.5 Tahoma;\n        font-weight: bold;\n\n    }\n    \n    .bold-heading {\n    font-weight: bold;\n    font-size: 45px;\n    color: #FFA500;\n    }\n    \n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1410,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "ccbf962a76178e8f",
        "type": "ui_text",
        "z": "c7300c4242c02729",
        "group": "f28c1c9ad82744f1",
        "order": 2,
        "width": 18,
        "height": 1,
        "name": "",
        "label": "MITSUBISHI POWER METER",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "bold-heading",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 660,
        "wires": []
    },
    {
        "id": "efa0dadf9d35b4b7",
        "type": "ui_template",
        "z": "c7300c4242c02729",
        "group": "0a7af370c5552477",
        "name": "",
        "order": 1,
        "width": 27,
        "height": 15,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Multiple Y-Axis Line Chart</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n\n<body>\n    <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n    <script>\n        var ctx = document.getElementById('myChart').getContext('2d');\n    var chartOptions = {\n    scales: {\n        y: [\n            {\n                id: 'y-axis-1',\n                type: 'linear',\n                position: 'right',\n                min: 0, // minimum value for y-axis-1\n                max: 100, // maximum value for y-axis-1\n                scaleLabel: {\n                    display: true,\n                    labelString: 'VoltageAB'\n                }\n            },\n            {\n                id: 'y-axis-2',\n                type: 'linear',\n                position: 'left',\n                min: 0, // minimum value for y-axis-2\n                max: 200, // maximum value for y-axis-2\n                scaleLabel: {\n                    display: true,\n                    labelString: 'VoltageBC'\n                },\n                grid: {\n                    drawOnChartArea: false,\n                },\n            }\n        ]\n    }\n};\n\n\n    var myChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: [],\n            datasets: []\n        },\n        options: chartOptions\n    });\n\n    function updateChart(newData) {\n        var newDataset = {\n            label: newData.label,\n            yAxisID: newData.yAxisID,\n            data: newData.values,\n            borderColor: newData.borderColor,\n            borderWidth: 5,\n            fill: false\n        };\n        myChart.data.labels = newData.labels;\n        myChart.data.datasets.push(newDataset);\n        if (myChart.data.labels.length > 1000) {\n            myChart.data.labels.shift();\n            myChart.data.datasets.forEach(dataset => {\n                dataset.data.shift();\n            });\n        }\n        myChart.update();\n    }\n\n    (function (scope) {\n        scope.$watch('msg', function (msg) {\n            var newData = {\n                label: msg.label,\n                yAxisID: msg.yAxisID,\n                values: msg.payload.data,\n                labels: msg.payload.labels,\n                borderColor: msg.borderColor\n            };\n            updateChart(newData);\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "box",
        "x": 1620,
        "y": 860,
        "wires": [
            [
                "a1c4df9ce1035f66"
            ]
        ]
    },
    {
        "id": "a40f803eb9e8666a",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "function 2",
        "func": "// msg.payload = msg.payload.VoltageBC;\n// msg.yAxisID = 'y-axis-2';\n// msg.label = 'VoltageBC';\n// msg.borderColor = 'blue';\n// var temp = context.get(\"temp\") || []\n// if (!temp) {\n//     console.log(\"Set array inside temp\");\n//     context.set(\"temp\", []);\n//     temp = context.get(\"temp\");\n// }\n// temp.push(msg.payload.VoltageBC);\n// msg.payload = temp;\n// node.warn(msg.payload);\n// return msg;\n\nmsg.yAxisID = 'y-axis-2';\nmsg.label = 'VoltageBC';\nmsg.borderColor = 'blue';\n\nvar temp = context.get(\"temp\") || { labels: [], data: [] };\ntemp.labels.push(new Date().toISOString()); // Push the current time\ntemp.data.push(msg.payload.VoltageBC); // Push the corresponding value\n\nif (temp.data.length >= 5) {\n  msg.payload = temp;\n  context.set(\"temp\", { labels: [], data: [] }); // Reset the temp object\n  return msg;\n} else {\n  context.set(\"temp\", temp); // Update the temp object in context\n  return null; // Return null to indicate that the message should not be passed to the next node yet\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 880,
        "wires": [
            [
                "efa0dadf9d35b4b7"
            ]
        ]
    },
    {
        "id": "a1c4df9ce1035f66",
        "type": "debug",
        "z": "c7300c4242c02729",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 900,
        "wires": []
    },
    {
        "id": "6c7991a7d591e400",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "function 3",
        "func": "msg.yAxisID = 'y-axis-1';\nmsg.label = 'VoltageAB';\nmsg.borderColor = 'red';\nvar temp = context.get(\"temp\") || {labels: [], data: []};\nif (!temp) {\n    console.log(\"Set object inside temp\");\n    context.set(\"temp\", {labels: [], data: []});\n    temp = context.get(\"temp\");\n}\nfor(let i = 0; i < 5; i++) {\n    temp.labels.push(new Date().toISOString()); // push the current time\n    temp.data.push(msg.payload.VoltageAB); // push the corresponding value\n}\nmsg.payload = temp;\nnode.warn(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 940,
        "wires": [
            [
                "efa0dadf9d35b4b7"
            ]
        ]
    },
    {
        "id": "975a5d3dc5e0d1ec",
        "type": "http in",
        "z": "c7300c4242c02729",
        "name": "/data",
        "url": "/data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1610,
        "y": 1040,
        "wires": [
            [
                "2af391d5ef449602"
            ]
        ]
    },
    {
        "id": "d95cf62a7047ed56",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Process Request",
        "func": "var payload = {\n    VoltageA: flow.get('Phase_A'),\n    CurrentA: flow.get('Current_A'),\n    VoltageB: flow.get('Phase_B'),\n    CurrentB: flow.get('Current_B'),\n    VoltageC: flow.get('Phase_C'),\n    CurrentC: flow.get('Current_C'),\n    Power: flow.get('Power')\n};\nvar response = {\n    status: 'success',\n    message: 'Request processed successfully',\n    data: payload\n};\nmsg.payload = response;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "eb4c26c073a3f6b9",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "var msg = {};\nmsg.payload = flow.get('EnergyIn');\nmsg.topic = 'EnergyIn';\nreturn [msg];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 920,
        "wires": [
            [
                "3821ecfdaef2175e"
            ]
        ]
    },
    {
        "id": "53e829d235abc00b",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "var msg = {};\nmsg.payload = flow.get('EnergyOut');\nmsg.topic = 'EnergyOut';\nreturn [msg];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 960,
        "wires": [
            [
                "3821ecfdaef2175e"
            ]
        ]
    },
    {
        "id": "80ee2d151d2b7347",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "\nvar msg7 = {};\nmsg7.payload = flow.get('Current_A');\nmsg7.topic = 'Current_A';\nreturn [msg7];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 760,
        "wires": [
            [
                "698dc67136d3e973"
            ]
        ]
    },
    {
        "id": "3fddbad3fe57ae77",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "\nvar msg7 = {};\nmsg7.payload = flow.get('Current_C');\nmsg7.topic = 'Current_C';\nreturn [msg7];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 840,
        "wires": [
            [
                "698dc67136d3e973"
            ]
        ]
    },
    {
        "id": "9a96d579c6843af0",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "\nvar msg7 = {};\nmsg7.payload = flow.get('Current_B');\nmsg7.topic = 'Current_B';\nreturn [msg7];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 800,
        "wires": [
            [
                "698dc67136d3e973"
            ]
        ]
    },
    {
        "id": "698dc67136d3e973",
        "type": "ui_chart",
        "z": "c7300c4242c02729",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 174,
        "width": 23,
        "height": 9,
        "label": "Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "25",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#260303",
            "#f90b13",
            "#3238ec",
            "#2ca02c",
            "#232c21",
            "#d62728",
            "#ff9896",
            "#1d0c2d",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "box",
        "x": 1380,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "82cd48af2bd017bd",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "\nvar msg7 = {};\nmsg7.payload = flow.get('Phase_A');\nmsg7.topic = 'Phase_A';\nreturn [msg7];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 400,
        "wires": [
            [
                "6be037135a8b3fbf"
            ]
        ]
    },
    {
        "id": "9c0d28450813f45b",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "\nvar msg7 = {};\nmsg7.payload = flow.get('Phase_C');\nmsg7.topic = 'Phase_C';\nreturn [msg7];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 480,
        "wires": [
            [
                "6be037135a8b3fbf"
            ]
        ]
    },
    {
        "id": "0127d506da88b148",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Phase A",
        "func": "\nvar msg7 = {};\nmsg7.payload = flow.get('Phase_B');\nmsg7.topic = 'Phase_B';\nreturn [msg7];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 440,
        "wires": [
            [
                "6be037135a8b3fbf"
            ]
        ]
    },
    {
        "id": "6be037135a8b3fbf",
        "type": "ui_chart",
        "z": "c7300c4242c02729",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 134,
        "width": 23,
        "height": 9,
        "label": "Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "90",
        "ymax": "250",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#260303",
            "#f90b13",
            "#3238ec",
            "#2ca02c",
            "#232c21",
            "#d62728",
            "#ff9896",
            "#1d0c2d",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "box",
        "x": 1380,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a10872aef796a2ba",
        "type": "http response",
        "z": "c7300c4242c02729",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1630,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e6cb821e6b6f4f1d",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Data Insert to the table",
        "info": "",
        "x": 1620,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5e547561219b97fe",
        "type": "join",
        "z": "c7300c4242c02729",
        "name": "Data Centralization",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1460,
        "y": 1320,
        "wires": [
            [
                "014f90d3948818fe",
                "357a941f127fd5d3",
                "beb807962104278e"
            ]
        ]
    },
    {
        "id": "014f90d3948818fe",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "SQL Write function",
        "func": "// var VoltageAB = msg.payload.voltage1.VoltageAB;\n// var VoltageBC = msg.payload.voltage2.VoltageBC;\n// var VoltageCA = msg.payload.voltage3.VoltageCA;\n// var CurrentA = msg.payload.current1.CurrentA;\n// var CurrentB = msg.payload.current2.CurrentB;\n// var CurrentC = msg.payload.current3.CurrentC;\n// var Power = msg.payload.power1.Power;\n// var FeedIn = msg.payload.feedin.EnergyIn;\n// var FeedOut = msg.payload.feedout.EnergyOut;\n// var command = \"INSERT INTO modbus_test (`Power`,`FeedIn`,`FeedOut`,`Vpa`,`Vpb`,`Vpc`,`Cpa`,`Cpb`,`Cpc`) VALUES (\\'\" + Power + \"\\',\\'\" + FeedIn + \"\\',\\'\" + FeedOut + \"\\',\\'\" + VoltageAB + \"\\',\\'\" + VoltageBC + \"\\',\\'\" + VoltageCA + \"\\',\\'\" + CurrentA + \"\\',\\'\" + CurrentB + \"\\',\\'\" + CurrentC + \"\\');\"\n// msg.topic = command;\n// return msg;\n\nvar sql = \"\";\nvar d = new Date();\n// var epoch = d.getTime();\nvar epoch = Math.floor(d.getTime() / 1000);\nvar outputs = [];\nflow.set('device', 'mitsubishi');\nvar VoltageAB = msg.payload.voltage1.VoltageAB;\nvar VoltageBC = msg.payload.voltage2.VoltageBC;\nvar VoltageCA = msg.payload.voltage3.VoltageCA;\nvar CurrentA = msg.payload.current1.CurrentA;\nvar CurrentB = msg.payload.current2.CurrentB;\nvar CurrentC = msg.payload.current3.CurrentC;\nvar Power = msg.payload.power1.Power;\nvar FeedIn = msg.payload.feedin.EnergyIn;\nvar FeedOut = msg.payload.feedout.EnergyOut;\nvar Device = flow.get('device');\nsql = \"insert into modbus_test (`device`,`Power`,`FeedIn`,`FeedOut`,`Vpa`,`Vpb`,`Vpc`,`Cpa`,`Cpb`,`Cpc`, `epoch`) \" +\n    \"values (\\'\" + Device + \"\\',\\'\" + Power + \"\\',\\'\" + FeedIn + \"\\',\\'\" + FeedOut + \"\\',\\'\" + VoltageAB + \"\\',\\'\" + VoltageBC + \"\\',\\'\" + VoltageCA + \"\\',\\'\" + CurrentA + \"\\',\\'\" + CurrentB + \"\\',\\'\" + CurrentC + \"\\',\\'\" + epoch + \"\\')\";\noutputs.push({ topic: sql });\n\n// update the status with current timestamp\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\nnode.status({ fill: \"blue\", shape: \"ring\", text: \"last update: \" + dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss });\n\nreturn [outputs];\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 1260,
        "wires": [
            [
                "94dbb05551d63c08"
            ]
        ]
    },
    {
        "id": "af52eca2d987c91b",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "voltage1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1160,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "185c7d1ecc07da73",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "voltage2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1200,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "c3b3d30f922b583b",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "current1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1280,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "fc111b72fb8b2ac5",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "voltage3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1240,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "58e9ca169240f85a",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "current2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1320,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "f70b8867e7f9f2b0",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "current3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1360,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "bde81820fc10e56c",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "power1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1400,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "283f48baf0a238df",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "feedin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1440,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "6b47b3dc4ef013b7",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "feedout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1480,
        "wires": [
            [
                "5e547561219b97fe"
            ]
        ]
    },
    {
        "id": "a26aef0dbc842736",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Set different topic for different data for identification",
        "info": "",
        "x": 1350,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a17a3e6dd0e00382",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Dispaly in UI",
        "info": "",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "47c972d51051b589",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Get API for all data",
        "info": "",
        "x": 1610,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a89fb53977eed937",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Save data to csv file",
        "info": "",
        "x": 1690,
        "y": 1360,
        "wires": []
    },
    {
        "id": "a490a5c86c4cf88b",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Raw Function",
        "info": "",
        "x": 1630,
        "y": 780,
        "wires": []
    },
    {
        "id": "b34345312f5c693d",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Get Value calculation with scaling factor ",
        "info": "",
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "c0075bea8e06bdeb",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Filename generator",
        "func": "// @ts-nocheck\n// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"Power_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = 'C:\\\\users\\\\smart\\\\onedrive\\\\デスクトップ\\\\nod\\\\'+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1400,
        "wires": [
            [
                "00b34d8a4c47033a"
            ]
        ]
    },
    {
        "id": "6c1eaef69a2d30ad",
        "type": "debug",
        "z": "c7300c4242c02729",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 1500,
        "wires": []
    },
    {
        "id": "0eabc8de620a4c45",
        "type": "switch",
        "z": "c7300c4242c02729",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 1500,
        "wires": [
            [
                "a569affed14db3c2"
            ],
            [
                "732974102243a26a"
            ]
        ]
    },
    {
        "id": "c6b4ba10e1f3f379",
        "type": "csv",
        "z": "c7300c4242c02729",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date,time,VoltageAB,VoltageBC,VoltageCA ,CurrentA,CurrentB,CurrentC,Power,FeedIn,FeedOut",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1830,
        "y": 1480,
        "wires": [
            [
                "4f8b87987bf72964"
            ]
        ]
    },
    {
        "id": "4f8b87987bf72964",
        "type": "file",
        "z": "c7300c4242c02729",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1960,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "587556f5892b660f",
        "type": "csv",
        "z": "c7300c4242c02729",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date,time,VoltageAB,VoltageBC,VoltageCA ,CurrentA,CurrentB,CurrentC,Power,FeedIn,FeedOut",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1830,
        "y": 1520,
        "wires": [
            [
                "4f8b87987bf72964"
            ]
        ]
    },
    {
        "id": "a569affed14db3c2",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1460,
        "wires": [
            [
                "c6b4ba10e1f3f379"
            ]
        ]
    },
    {
        "id": "732974102243a26a",
        "type": "change",
        "z": "c7300c4242c02729",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1540,
        "wires": [
            [
                "587556f5892b660f"
            ]
        ]
    },
    {
        "id": "00b34d8a4c47033a",
        "type": "fs-file-lister",
        "z": "c7300c4242c02729",
        "name": "",
        "start": "C:\\Users\\smart\\OneDrive\\デスクトップ\\nod\\",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "both",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1520,
        "y": 1460,
        "wires": [
            [
                "6c1eaef69a2d30ad",
                "0eabc8de620a4c45"
            ]
        ]
    },
    {
        "id": "357a941f127fd5d3",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Set data",
        "func": "var timestamp = new Date();\nvar date = timestamp.toLocaleDateString(); // Get the date component\nvar time = timestamp.toLocaleTimeString();\n\nmsg.payload = {\n    \"date\" : date,\n    \"time\" : time,\n    \"VoltageAB\" : msg.payload.voltage1.VoltageAB,\n    \"VoltageBC\" : msg.payload.voltage2.VoltageBC,\n    \"VoltageCA\" : msg.payload.voltage3.VoltageCA,\n    \"CurrentA\" : msg.payload.current1.CurrentA,\n    \"CurrentB\" : msg.payload.current2.CurrentB,\n    \"CurrentC\" : msg.payload.current3.CurrentC,\n    \"Power\" : msg.payload.power1.Power,\n    \"FeedIn\" : msg.payload.feedin.EnergyIn,\n    \"FeedOut\" : msg.payload.feedout.EnergyOut\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 1360,
        "wires": [
            [
                "c0075bea8e06bdeb"
            ]
        ]
    },
    {
        "id": "4d5a41ea169e774a",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Auto Logger",
        "info": "",
        "x": 1710,
        "y": 1400,
        "wires": []
    },
    {
        "id": "beb807962104278e",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "function 9",
        "func": "var sql = \"\";\nvar d = new Date();\nvar epoch = Math.floor(d.getTime() / 1000 );\nvar outputs = [];\n\n// var VoltageAB = msg.payload.voltage1.VoltageAB;\n// var VoltageBC = msg.payload.voltage2.VoltageBC;\n// var VoltageCA = msg.payload.voltage3.VoltageCA;\n// var CurrentA = msg.payload.current1.CurrentA;\n// var CurrentB = msg.payload.current2.CurrentB;\n// var CurrentC = msg.payload.current3.CurrentC;\n// var Power = msg.payload.power1.Power;\n// var FeedIn = msg.payload.feedin.EnergyIn;\n// var FeedOut = msg.payload.feedout.EnergyOut;\n\nsql = \"INSERT INTO sensor_data (device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','PhaseA_Voltage',\" + msg.payload.voltage1.VoltageAB+ \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','PhaseB_Voltage',\" + msg.payload.voltage2.VoltageBC + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','PhaseC_Voltage',\" + msg.payload.voltage3.VoltageCA + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','PhaseA_Current',\" + msg.payload.current1.CurrentA + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','PhaseB_Current',\" + msg.payload.current2.CurrentB + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','PhaseC_Current',\" + msg.payload.current3.CurrentC + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','FeedIn',\" + msg.payload.feedin.EnergyIn + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','FeedOut',\" + msg.payload.feedout.EnergyOut + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n    \"VALUES ('Mitsubishi','Power',\" + msg.payload.power1.Power + \",\" + epoch + \")\";\noutputs.push({ topic: sql });\n\n// Update the status with current timestamp\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\nnode.status({ fill: \"blue\", shape: \"ring\", text: \"Last update: \" + dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss });\n\nreturn [outputs];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1260,
        "wires": [
            [
                "94dbb05551d63c08"
            ]
        ]
    },
    {
        "id": "4afcd493c278659c",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Data aggregation",
        "info": "Below example extract max, min and last from the\nsensor log table, and inserts them into an\naggregate table.",
        "x": 600,
        "y": 1620,
        "wires": []
    },
    {
        "id": "5843c92175950cf7",
        "type": "inject",
        "z": "c7300c4242c02729",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 03 * * *",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630,
        "y": 1660,
        "wires": [
            [
                "8150271a23411664"
            ]
        ]
    },
    {
        "id": "8150271a23411664",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Get Max values",
        "func": "var d = new Date();\nvar epoch = Math.floor(d.getTime() / 1000);\n// Go to previous day\n// var time = d.setTime(d.getTime()-(24*60*60*1000));\n// console.log(time);\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nvar fromdate = Math.floor(d.getTime() / 1000);\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nvar enddate = Math.floor(d.getTime() / 1000);\nvar timestamp = Math.floor(d.getTime() / 1000);\n\nmsg.topic = \"SELECT device, sensor, MAX(value) AS value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND (sensor='PhaseA_Voltage' or sensor='PhaseB_Voltage' or sensor='PhaseC_Voltage'or sensor='PhaseA_Current' or sensor='PhaseB_Current' or sensor='PhaseC_Current') GROUP BY sensor,device\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1660,
        "wires": [
            [
                "39ebaa8a4f43ff12"
            ]
        ]
    },
    {
        "id": "2b1430ce9d5be5c3",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Get Min values",
        "func": "var d = new Date();\nvar epoch = Math.floor(d.getTime() / 1000);\n// Go to previous day\n// var time = d.setTime(d.getTime()-(24*60*60*1000));\n// console.log(time);\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nvar fromdate = Math.floor(d.getTime() / 1000);\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nvar enddate = Math.floor(d.getTime() / 1000);\nvar timestamp = Math.floor(d.getTime() / 1000);\n\nmsg.topic = \"SELECT device,sensor,MIN(value) AS value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND (sensor='PhaseA_Voltage' or sensor='PhaseB_Voltage' or sensor='PhaseC_Voltage'or sensor='PhaseA_Current' or sensor='PhaseB_Current' or sensor='PhaseC_Current') GROUP BY sensor,device\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 797,
        "y": 1697.0000476837158,
        "wires": [
            [
                "39ebaa8a4f43ff12"
            ]
        ]
    },
    {
        "id": "0b73b896d2f2b491",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "Get Last values",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = Math.floor(d.getTime() / 1000);\n// Go to previous day\n// var time = d.setTime(d.getTime()-(24*60*60*1000));\n// console.log(time);\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nvar fromdate = Math.floor(d.getTime() / 1000);\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nvar enddate = Math.floor(d.getTime() / 1000);\nvar timestamp = Math.floor(d.getTime() / 1000);\n\noutput.push({ topic: \"SELECT device,sensor,value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND device='Mitsubishi' AND sensor='PhaseA_Voltage' ORDER BY id DESC LIMIT 1 \" });\n\nreturn [output];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1740,
        "wires": [
            [
                "39ebaa8a4f43ff12"
            ]
        ]
    },
    {
        "id": "68ec1796ae44452d",
        "type": "inject",
        "z": "c7300c4242c02729",
        "name": "",
        "repeat": "",
        "crontab": "01 3 * * *",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630,
        "y": 1700,
        "wires": [
            [
                "2b1430ce9d5be5c3"
            ]
        ]
    },
    {
        "id": "3db4c96dd5047659",
        "type": "inject",
        "z": "c7300c4242c02729",
        "name": "",
        "repeat": "",
        "crontab": "02 3 * * *",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630,
        "y": 1740,
        "wires": [
            [
                "0b73b896d2f2b491"
            ]
        ]
    },
    {
        "id": "7396a10b6173ed61",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "SQL Updates",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = Math.floor(d.getTime() / 1000);\n// Go to previous day\n// var time = d.setTime(d.getTime()-(24*60*60*1000));\n// console.log(time);\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nvar fromdate = Math.floor(d.getTime() / 1000);\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nvar enddate = Math.floor(d.getTime() / 1000);\nvar timestamp = Math.floor(d.getTime() / 1000);\n\nmsg.topic = \"INSERT INTO sensor_aggr (epoch,device,sensor,value) VALUES(\" + fromdate + \",'\" + msg.payload[0].device + \"','\" + msg.payload[0].sensor +\"',\"+ msg.payload[0].value +\")\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1740,
        "wires": [
            [
                "67fee7baa510edfc"
            ]
        ]
    },
    {
        "id": "3271df4d3454de77",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "SQL Updates",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = Math.floor(d.getTime() / 1000);\n// Go to previous day\n// var time = d.setTime(d.getTime()-(24*60*60*1000));\n// console.log(time);\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nvar fromdate = Math.floor(d.getTime() / 1000);\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nvar enddate = Math.floor(d.getTime() / 1000);\nvar timestamp = Math.floor(d.getTime() / 1000);\n\nfor (var i=0; i<msg.payload.length; i++) {\n    output.push({ topic:\"INSERT INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+ fromdate +\",'\"+ msg.payload[i].device +\"','\"+ msg.payload[i].sensor +\"_max',\"+msg.payload[i].value+\")\" });\n}\n\nreturn [output];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1660,
        "wires": [
            [
                "67fee7baa510edfc"
            ]
        ]
    },
    {
        "id": "3809e606bf889bcc",
        "type": "function",
        "z": "c7300c4242c02729",
        "name": "SQL Updates",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = Math.floor(d.getTime() / 1000);\n// Go to previous day\n// var time = d.setTime(d.getTime()-(24*60*60*1000));\n// console.log(time);\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nvar fromdate = Math.floor(d.getTime() / 1000);\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nvar enddate = Math.floor(d.getTime() / 1000);\nvar timestamp = Math.floor(d.getTime() / 1000);\n\nfor (var i=0; i<msg.payload.length; i++) {\n    output.push({ topic:\"INSERT INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+fromdate+\",'\"+msg.payload[i].device+\"','\"+msg.payload[i].sensor+\"_min',\"+msg.payload[i].value+\")\" });\n}\n\nreturn [output];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1162.75,
        "y": 1694.5,
        "wires": [
            [
                "67fee7baa510edfc"
            ]
        ]
    },
    {
        "id": "ce372d819d186d9c",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Calculate aggregated values (min,max,last)",
        "info": "",
        "x": 880,
        "y": 1620,
        "wires": []
    },
    {
        "id": "69eb57ef2f994433",
        "type": "comment",
        "z": "c7300c4242c02729",
        "name": "Insert aggregated values to new table",
        "info": "",
        "x": 1210,
        "y": 1620,
        "wires": []
    },
    {
        "id": "39ebaa8a4f43ff12",
        "type": "mysql",
        "z": "c7300c4242c02729",
        "mydb": "0af92681cb796592",
        "name": "sql",
        "x": 970,
        "y": 1700,
        "wires": [
            [
                "3271df4d3454de77",
                "3809e606bf889bcc",
                "7396a10b6173ed61",
                "84fbcc796bd8f0cc"
            ]
        ]
    },
    {
        "id": "67fee7baa510edfc",
        "type": "mysql",
        "z": "c7300c4242c02729",
        "mydb": "0af92681cb796592",
        "name": "sql",
        "x": 1370,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "84fbcc796bd8f0cc",
        "type": "debug",
        "z": "c7300c4242c02729",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1780,
        "wires": []
    },
    {
        "id": "8274bbc9923ddb1c",
        "type": "change",
        "z": "27f25c95.8feb34",
        "name": "Title",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "title",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "bab132466ebbb1b2"
            ]
        ]
    },
    {
        "id": "536e7eab8481a621",
        "type": "function",
        "z": "27f25c95.8feb34",
        "name": "SQL",
        "func": "// This will handle any device and any attribute as long as it is in the DB\nvar p_30d = 1000*60*60*24*30 ; //30 Days\nvar p_7d  = 1000*60*60*24*7 ; //7 Days\nvar p_1d  = 1000*60*60*24 ; // 1 Day\nvar d = new Date();\nvar current = d.getTime();\nvar today0h = d.setHours(0,0,0,0);\nnode.warn(today0h);\nvar day = Math.floor(d.getDay() / 1000);\nvar monday0h = today0h - (day + (day === 0 ? -6:1)) * p_1d;\nvar fromdate = 0;\nvar fromdates = 0;\nvar enddate = 0;\nvar enddates = 0;\nvar sql = [];\nvar sourcelist = [];\nvar aggrlist = [];\nvar title = \"\";\n\n\n// Get the period and the list of data sources \n// also set some default values if one or the other does not exist yet\nsourcelist = context.get(\"sourcelist\");\nif (sourcelist===undefined) { // if running for the first time\n    sourcelist = [];\n}\naggrlist = context.get(\"aggrlist\");\nif (aggrlist===undefined) { // if running for the first time\n    aggrlist = [];\n}\nfromdate = context.get(\"fromdate\");\nif (fromdate===undefined) {\n    // set the period to a default if it is not selected yet\n    fromdate = current-p_1d;\n}\nenddate = context.get(\"enddate\");\nif (enddate===undefined) {\n    // set the period to a default if it is not selected yet\n    enddate = current;\n}\n\nswitch(msg.topic) {\n    case \"period\":\n        switch(msg.payload) {\n            case \"today\":\n                fromdate = today0h;\n                // fromdate = Math.floor(fromdates / 1000);\n                enddate = today0h + p_1d;\n                // enddate = Math.floor(enddates / 1000);\n                // Math.floor(today0h + p_1d / 1000)\n                // node.warn(enddate);\n                break;\n            case \"yesterday\":\n                fromdate = today0h-p_1d;\n                enddate = today0h;\n                break;\n            case \"thisweek\":\n                fromdate = monday0h;\n                enddate = monday0h+p_7d;\n                break;\n            case \"lastweek\":\n                fromdate = monday0h-p_7d;\n                enddate = monday0h;\n                break;\n            case \"last24h\":\n                fromdate = current-p_1d;\n                enddate = current;\n                break;\n            case \"last7d\":\n                fromdate = current-p_7d;\n                enddate = current;\n                break;\n            case \"last30d\":\n                fromdate = current-p_30d;\n                enddate = current;\n                break;\n        }\n        context.set(\"fromdate\",fromdate);\n        context.set(\"enddate\",enddate);\n        break;\n    case \"datasource\":\n        if (msg.payload===\"delete\") {\n            // remove all previous data sources\n            sourcelist = [];\n        } else {\n            sourcelist = context.get(\"sourcelist\");\n            if (sourcelist===undefined) { // if running for the first time\n                sourcelist = [];\n            }\n            sourcelist.push(msg.payload);\n        }\n        context.set(\"sourcelist\",sourcelist);\n        break;\n    case \"aggrsource\":\n        if (msg.payload===\"delete\") {\n            // remove all previous data sources\n            aggrlist = [];\n        } else {\n            aggrlist = context.get(\"aggrlist\");\n            if (aggrlist===undefined) { // if running for the first time\n                aggrlist = [];\n            }\n            aggrlist.push(msg.payload);\n        }\n        context.set(\"aggrlist\",aggrlist);\n        break;\n    case \"minus1w\":\n        fromdate = fromdate-p_7d;\n        enddate = enddate-p_7d;\n        context.set(\"fromdate\",fromdate);\n        context.set(\"enddate\",enddate);\n        break;\n    case \"plus1w\":\n        fromdate = fromdate+p_7d;\n        enddate = enddate+p_7d;\n        context.set(\"fromdate\",fromdate);\n        context.set(\"enddate\",enddate);\n        break;\n    case \"minus1d\":\n        fromdate = fromdate-p_1d;\n        enddate = enddate-p_1d;\n        context.set(\"fromdate\",fromdate);\n        context.set(\"enddate\",enddate);\n        break;\n    case \"plus1d\":\n        fromdate = fromdate+p_1d;\n        enddate = enddate+p_1d;\n        context.set(\"fromdate\",fromdate);\n        context.set(\"enddate\",enddate);\n        break;\n}\n\n\n// Regenerate the SQL statements\n// Run through the data source list an generate the SQL statements\nsql = [];\nif (sourcelist.length>0) {\n    for (var i = 0; i < sourcelist.length; i++) {\n        var parts = sourcelist[i].split(\"/\");\n        sql.push({ topic: \"SELECT * FROM sensor_data WHERE device='\" + parts[0] + \"'AND sensor='\" + parts[1] + \"' AND epoch >= \" + Math.floor(fromdate / 1000) + \" AND epoch <= \" + Math.floor(enddate / 1000) });\n    }\n} \nif (aggrlist.length>0) {\n    for (var i = 0; i < aggrlist.length; i++) {\n        var parts = aggrlist[i].split(\"/\");\n        sql.push({ topic: \"SELECT * FROM sensor_aggr WHERE device='\" + parts[0] + \"' AND sensor= '\" + parts[1] + \"' AND epoch >= \" + Math.floor(fromdate / 1000) + \" AND epoch <= \" + Math.floor(enddate / 1000) });\n    }\n} \nif (sql.length===0) {     \n    // Dummy select that returns nothing to clear the chart\n    sql.push({ topic: \"SELECT * FROM sensor_data WHERE device='xxxx'\" });\n}\n\n// set the completed flag for the join node later\nsql[sql.length-1].complete=true;\n// pass along the email flag to redirect the flow later\nif (msg.topic===\"email\") {\n    sql[sql.length-1].email=true;\n}\n\n// Generate report title\nif (sourcelist.length===0 && aggrlist.length===0 ) {\n    title = \"No data source\";\n} else {\n    if (sourcelist.length!==0) {\n        title = title + sourcelist.toString()+ \", \";\n    }\n    if (aggrlist.length!==0) {\n        title = title + aggrlist.toString()+ \", \";\n    }\n    title = title.substring(0,title.length-2);\n    title = title + \" | \";\n    node.warn(title);\n\n    var d = new Date();\n    d.setTime(fromdate);\n    // d.setTime(fromdate);\n    var yyyy = d.getFullYear();\n    var mm = d.getMonth() < 9 ? \"0\" + (d.getMonth() + 1) : (d.getMonth() + 1); // getMonth() is zero-based\n    var dd  = d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate();\n    var hh = d.getHours() < 10 ? \"0\" + d.getHours() : d.getHours();\n    var mmm  = d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes();\n    var ss  = d.getSeconds() < 10 ? \"0\" + d.getSeconds() : d.getSeconds();\n    title = title + dd + \".\" + mm + \".\" + yyyy;\n    d.setTime(enddate);\n    // node.warn(Math.floor(d.setTime(enddate) / 1000));\n    // d.setTime(enddate);\n    yyyy = d.getFullYear();\n    mm = d.getMonth() < 9 ? \"0\" + (d.getMonth() + 1) : (d.getMonth() + 1); // getMonth() is zero-based\n    dd  = d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate();\n    hh = d.getHours() < 10 ? \"0\" + d.getHours() : d.getHours();\n    mmm  = d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes();\n    ss  = d.getSeconds() < 10 ? \"0\" + d.getSeconds() : d.getSeconds();\n    title = title + \" - \" + dd + \".\" + mm + \".\" + yyyy;\n    node.warn(title);\n    // node.warn(title);\n    // Math.floor(d.setTime(enddate) / 1000);\n}\nsql[sql.length-1].title=title;\n// node.warn(sql);\n\nreturn [ sql ];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "1dc96b7915acbf67",
                "9497d331fe249f01"
            ]
        ]
    },
    {
        "id": "ff70349d2efddd3f",
        "type": "function",
        "z": "27f25c95.8feb34",
        "name": "Chart Prep",
        "func": "\nvar chart = [{\n    \"series\": [],\n    \"data\": [],\n    \"labels\": [msg.title]\n}];\n\nif (msg.payload[0].length>0) {\n    // this is the logic when there are multiple data sets are received\n    for (var i=0; i<msg.payload.length; i++) {\n        chart[0].series.push(msg.payload[i][0].device+\"/\"+msg.payload[i][0].sensor);\n        chart[0].data.push([]);\n        let newdata = [];\n        for (var j=0; j<msg.payload[i].length; j++) {\n            chart[0].data[i].push({\"x\":msg.payload[i][j].epoch*1000, \"y\":msg.payload[i][j].value});\n        }\n    }\n}\n\nmsg.payload=chart;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 400,
        "wires": [
            [
                "461f19a937bf15cc",
                "0a4dbf935d102af6"
            ]
        ]
    },
    {
        "id": "22bcd8707a48e0dd",
        "type": "inject",
        "z": "27f25c95.8feb34",
        "name": "Reset chart",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "a79975316da3c985"
            ]
        ]
    },
    {
        "id": "a79975316da3c985",
        "type": "function",
        "z": "27f25c95.8feb34",
        "name": "Empty payload",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 440,
        "wires": [
            [
                "0a4dbf935d102af6"
            ]
        ]
    },
    {
        "id": "85bb5b9e69f1d488",
        "type": "join",
        "z": "27f25c95.8feb34",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 510,
        "y": 380,
        "wires": [
            [
                "8274bbc9923ddb1c",
                "ff70349d2efddd3f"
            ]
        ]
    },
    {
        "id": "73020b7e40a33c3b",
        "type": "inject",
        "z": "27f25c95.8feb34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "491525b57f425370",
                "4d551166797de736",
                "3e69402a27973ea7"
            ]
        ]
    },
    {
        "id": "7ff1195d98970fd8",
        "type": "change",
        "z": "27f25c95.8feb34",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "491525b57f425370"
            ]
        ]
    },
    {
        "id": "4692f908d455e9ed",
        "type": "ui_button",
        "z": "27f25c95.8feb34",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 46,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "-1W",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "chevron_left",
        "payload": "",
        "payloadType": "str",
        "topic": "minus1w",
        "topicType": "str",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "536e7eab8481a621",
                "7ff1195d98970fd8"
            ]
        ]
    },
    {
        "id": "0ea08208296b596c",
        "type": "ui_button",
        "z": "27f25c95.8feb34",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 45,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "-1D",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "chevron_left",
        "payload": "",
        "payloadType": "str",
        "topic": "minus1d",
        "topicType": "str",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "536e7eab8481a621",
                "7ff1195d98970fd8"
            ]
        ]
    },
    {
        "id": "9d4a782914e1b3f0",
        "type": "ui_button",
        "z": "27f25c95.8feb34",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 43,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "+1W",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "chevron_right",
        "payload": "",
        "payloadType": "str",
        "topic": "plus1w",
        "topicType": "str",
        "x": 550,
        "y": 180,
        "wires": [
            [
                "536e7eab8481a621",
                "7ff1195d98970fd8"
            ]
        ]
    },
    {
        "id": "9869dec6597a936e",
        "type": "ui_button",
        "z": "27f25c95.8feb34",
        "name": "",
        "group": "f28c1c9ad82744f1",
        "order": 44,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "+1D",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "chevron_right",
        "payload": "",
        "payloadType": "str",
        "topic": "plus1d",
        "topicType": "str",
        "x": 550,
        "y": 220,
        "wires": [
            [
                "536e7eab8481a621",
                "7ff1195d98970fd8"
            ]
        ]
    },
    {
        "id": "4d551166797de736",
        "type": "ui_dropdown",
        "z": "27f25c95.8feb34",
        "name": "Data source",
        "label": "",
        "tooltip": "",
        "place": "",
        "group": "f28c1c9ad82744f1",
        "order": 41,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "[Remove all]",
                "value": "delete",
                "type": "str"
            },
            {
                "label": "Mitsubishi Power",
                "value": "Mitsubishi/Power",
                "type": "str"
            },
            {
                "label": "Mitsubishi Feed In",
                "value": "Mitsubishi/FeedIn",
                "type": "str"
            },
            {
                "label": "Mitsubishi Feed Out",
                "value": "Mitsubishi/FeedOut",
                "type": "str"
            },
            {
                "label": "Mitsubishi Phase A Voltage",
                "value": "Mitsubishi/PhaseA_Voltage",
                "type": "str"
            },
            {
                "label": "Mitsubishi Phase B Voltage",
                "value": "Mitsubishi/PhaseB_Voltage",
                "type": "str"
            },
            {
                "label": "Mitsubishi Phase C Voltage",
                "value": "Mitsubishi/PhaseC_Voltage",
                "type": "str"
            },
            {
                "label": "Mitsubishi Phase A Current",
                "value": "Mitsubishi/PhaseA_Current",
                "type": "str"
            },
            {
                "label": "Mitsubishi Phase B Current",
                "value": "Mitsubishi/PhaseB_Current",
                "type": "str"
            },
            {
                "label": "Mitsubishi Phase C Current",
                "value": "Mitsubishi/PhaseC_Current",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "datasource",
        "topicType": "str",
        "className": "",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "536e7eab8481a621"
            ]
        ]
    },
    {
        "id": "491525b57f425370",
        "type": "ui_dropdown",
        "z": "27f25c95.8feb34",
        "name": "Period",
        "label": "",
        "tooltip": "",
        "place": "",
        "group": "f28c1c9ad82744f1",
        "order": 42,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Today",
                "value": "today",
                "type": "str"
            },
            {
                "label": "Yesterday",
                "value": "yesterday",
                "type": "str"
            },
            {
                "label": "This week",
                "value": "thisweek",
                "type": "str"
            },
            {
                "label": "Last week",
                "value": "lastweek",
                "type": "str"
            },
            {
                "label": "Last 24 hours",
                "value": "last24h",
                "type": "str"
            },
            {
                "label": "Last 7 days",
                "value": "last7d",
                "type": "str"
            },
            {
                "label": "Last 30 days",
                "value": "last30d",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "period",
        "topicType": "str",
        "className": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "536e7eab8481a621"
            ]
        ]
    },
    {
        "id": "bab132466ebbb1b2",
        "type": "ui_text",
        "z": "27f25c95.8feb34",
        "group": "f28c1c9ad82744f1",
        "order": 8,
        "width": 23,
        "height": 2,
        "name": "Chart title",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "title",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 780,
        "y": 360,
        "wires": []
    },
    {
        "id": "0a4dbf935d102af6",
        "type": "ui_chart",
        "z": "27f25c95.8feb34",
        "name": "Chart",
        "group": "f28c1c9ad82744f1",
        "order": 13,
        "width": 23,
        "height": 13,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "box",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "8911c23e37d71a28"
            ]
        ]
    },
    {
        "id": "1dc96b7915acbf67",
        "type": "debug",
        "z": "27f25c95.8feb34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "5078fec67ef8c2eb",
        "type": "inject",
        "z": "27f25c95.8feb34",
        "name": "1 data series",
        "props": [
            {
                "p": "complete",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT FeedIn FROM modbus_test WHERE device='mitsubishi' AND epoch >= 1696312780 AND epoch <= 1696314863",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "9497d331fe249f01"
            ]
        ]
    },
    {
        "id": "461f19a937bf15cc",
        "type": "debug",
        "z": "27f25c95.8feb34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "7362c0b42ee4ff82",
        "type": "inject",
        "z": "27f25c95.8feb34",
        "name": "2nd data (press first)",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT Power FROM modbus_test WHERE device='mitsubishi' AND epoch >= 1636412400 AND epoch <= 1636498800",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "9497d331fe249f01"
            ]
        ]
    },
    {
        "id": "9497d331fe249f01",
        "type": "mysql",
        "z": "27f25c95.8feb34",
        "mydb": "0af92681cb796592",
        "name": "",
        "x": 370,
        "y": 380,
        "wires": [
            [
                "85bb5b9e69f1d488"
            ]
        ]
    },
    {
        "id": "3e69402a27973ea7",
        "type": "ui_dropdown",
        "z": "27f25c95.8feb34",
        "name": "Aggregate source",
        "label": "",
        "tooltip": "",
        "place": "",
        "group": "f28c1c9ad82744f1",
        "order": 40,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "[Remove all]",
                "value": "delete",
                "type": "str"
            },
            {
                "label": "PhaseA Current Max",
                "value": "Mitsubishi/PhaseA_Current_max",
                "type": "str"
            },
            {
                "label": "PhaseA Current Min",
                "value": "Mitsubishi/PhaseA_Current_min",
                "type": "str"
            },
            {
                "label": "PhaseA Voltage Max",
                "value": "Mitsubishi/PhaseA_Voltage_max",
                "type": "str"
            },
            {
                "label": "PhaseB Voltage Min",
                "value": "Mitsubishi/PhaseB_Voltage_min",
                "type": "str"
            },
            {
                "label": "PhaseB Voltage Max",
                "value": "Mitsubishi/PhaseB_Voltage_max",
                "type": "str"
            },
            {
                "label": "PhaseC Voltage Min",
                "value": "Mitsubishi/PhaseC_Voltage_min",
                "type": "str"
            },
            {
                "label": "PhaseC Voltage Max",
                "value": "Mitsubishi/PhaseC_Voltage_max",
                "type": "str"
            },
            {
                "label": "PhaseB Current Min",
                "value": "Mitsubishi/PhaseB_Current_min",
                "type": "str"
            },
            {
                "label": "PhaseB Current Min",
                "value": "Mitsubishi/PhaseB_Current_max",
                "type": "str"
            },
            {
                "label": "PhaseC Current Min",
                "value": "Mitsubishi/PhaseC_Current_min",
                "type": "str"
            },
            {
                "label": "PhaseC Current Max",
                "value": "Mitsubishi/PhaseC_Current_max",
                "type": "str"
            },
            {
                "label": "PhaseA Voltage Min",
                "value": "Mitsubishi/PhaseA_Voltage_min",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "aggrsource",
        "topicType": "str",
        "className": "box1",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "536e7eab8481a621"
            ]
        ]
    },
    {
        "id": "8911c23e37d71a28",
        "type": "debug",
        "z": "27f25c95.8feb34",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 420,
        "wires": []
    }
]